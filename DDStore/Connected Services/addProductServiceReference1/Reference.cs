//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DDStore.addProductServiceReference1 {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="addProductServiceReference1.addProductSoap")]
    public interface addProductSoap {
        
        // CODEGEN: Parameter 'imagePath' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertProduct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        DDStore.addProductServiceReference1.InsertProductResponse InsertProduct(DDStore.addProductServiceReference1.InsertProductRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertProduct", ReplyAction="*")]
        System.Threading.Tasks.Task<DDStore.addProductServiceReference1.InsertProductResponse> InsertProductAsync(DDStore.addProductServiceReference1.InsertProductRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCategoryName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getCategoryName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCategoryName", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getCategoryNameAsync();
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertProduct", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class InsertProductRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string productId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string productName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string category;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int price;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public int quantity;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string description;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] imagePath;
        
        public InsertProductRequest() {
        }
        
        public InsertProductRequest(string productId, string productName, string category, int price, int quantity, string description, byte[] imagePath) {
            this.productId = productId;
            this.productName = productName;
            this.category = category;
            this.price = price;
            this.quantity = quantity;
            this.description = description;
            this.imagePath = imagePath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertProductResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class InsertProductResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string InsertProductResult;
        
        public InsertProductResponse() {
        }
        
        public InsertProductResponse(string InsertProductResult) {
            this.InsertProductResult = InsertProductResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface addProductSoapChannel : DDStore.addProductServiceReference1.addProductSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class addProductSoapClient : System.ServiceModel.ClientBase<DDStore.addProductServiceReference1.addProductSoap>, DDStore.addProductServiceReference1.addProductSoap {
        
        public addProductSoapClient() {
        }
        
        public addProductSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public addProductSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public addProductSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public addProductSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DDStore.addProductServiceReference1.InsertProductResponse DDStore.addProductServiceReference1.addProductSoap.InsertProduct(DDStore.addProductServiceReference1.InsertProductRequest request) {
            return base.Channel.InsertProduct(request);
        }
        
        public string InsertProduct(string productId, string productName, string category, int price, int quantity, string description, byte[] imagePath) {
            DDStore.addProductServiceReference1.InsertProductRequest inValue = new DDStore.addProductServiceReference1.InsertProductRequest();
            inValue.productId = productId;
            inValue.productName = productName;
            inValue.category = category;
            inValue.price = price;
            inValue.quantity = quantity;
            inValue.description = description;
            inValue.imagePath = imagePath;
            DDStore.addProductServiceReference1.InsertProductResponse retVal = ((DDStore.addProductServiceReference1.addProductSoap)(this)).InsertProduct(inValue);
            return retVal.InsertProductResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<DDStore.addProductServiceReference1.InsertProductResponse> DDStore.addProductServiceReference1.addProductSoap.InsertProductAsync(DDStore.addProductServiceReference1.InsertProductRequest request) {
            return base.Channel.InsertProductAsync(request);
        }
        
        public System.Threading.Tasks.Task<DDStore.addProductServiceReference1.InsertProductResponse> InsertProductAsync(string productId, string productName, string category, int price, int quantity, string description, byte[] imagePath) {
            DDStore.addProductServiceReference1.InsertProductRequest inValue = new DDStore.addProductServiceReference1.InsertProductRequest();
            inValue.productId = productId;
            inValue.productName = productName;
            inValue.category = category;
            inValue.price = price;
            inValue.quantity = quantity;
            inValue.description = description;
            inValue.imagePath = imagePath;
            return ((DDStore.addProductServiceReference1.addProductSoap)(this)).InsertProductAsync(inValue);
        }
        
        public System.Data.DataSet getCategoryName() {
            return base.Channel.getCategoryName();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getCategoryNameAsync() {
            return base.Channel.getCategoryNameAsync();
        }
    }
}
